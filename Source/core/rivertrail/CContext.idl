/*
 * Copyright (c) 2013, Intel Corporation
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without 
 * modification, are permitted provided that the following conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice, 
 *   this list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice, 
 *   this list of conditions and the following disclaimer in the documentation 
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF 
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF 
 * THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

[
    CustomConstructor,
    ImplementationLacksVTable
] interface CContext {
    // Functions for generating kernels.
    [Custom] CKernel compileKernel(DOMString source, DOMString kernelName, [Default=NullString] optional DOMString options);

    // Debugging the build process.
    readonly attribute DOMString buildLog;

    // Functions for mapping data.
    [Custom] CData mapData(ArrayBufferView source);
    [Custom] CData cloneData(ArrayBufferView source);
    [Custom] CData allocateData(ArrayBufferView templ, [Default=Undefined] optional unsigned long length);
    [Custom] CData allocateData2(CData templ, [Default=Undefined] optional unsigned long length);
    [Custom] boolean canBeMapped(ArrayBufferView source);

    // Profiling support.
    readonly attribute unsigned long long lastExecutionTime;
    readonly attribute unsigned long long lastRoundTripTime;

    // device property queries
    readonly attribute DOMString extensions;

    // Canvas writing support.
    [Custom] void writeToContext2D(CanvasRenderingContext2D ctx, ArrayBufferView source, long width, long height);

    // Aligning support.
    readonly attribute unsigned long alignmentSize;
    [Custom] unsigned long getAlignmentOffset(ArrayBufferView source);
};
